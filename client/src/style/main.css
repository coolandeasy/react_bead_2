.background-plate {
    background-color: #FFFFFF;
    width: 400px;
    height: 80%;
    margin: 4em auto;
    border-radius: 1.5em;
    box-shadow: 0 11px 35px 2px rgba(0, 0, 0, 0.14);
    padding: 2em;
}

.box {
    text-align: left;
    border: 1px lightgrey solid;
    padding: 1em;
    margin: -1px;
}

a {
    text-decoration: none;
}

.page {
    display: none;
}

/* width */
::-webkit-scrollbar {
    width: 8px;
}

/* Track */
::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 1.5em;
}

/* Handle */
::-webkit-scrollbar-thumb {
    background: #adadad;
    border-radius: 1.5em;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: #838383;
    border-radius: 1.5em;
}

.grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
}

.grow-wrap::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
}

.grow-wrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;

    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
}

.grow-wrap > textarea,
.grow-wrap::after {
    /* Identical styling required!! */
    border: 1px solid black;
    padding: 0.5rem;
    font: inherit;

    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
}